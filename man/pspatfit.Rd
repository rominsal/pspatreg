% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pspatfit.R
\name{pspatfit}
\alias{pspatfit}
\title{Estimate spatial or spatio-temporal semiparametric 
  PS-SAR, PS-SEM, PS-SARAR, PS-SLX or PS-DURBIN regression models.}
\usage{
pspatfit(
  formula,
  data,
  na.action,
  listw = NULL,
  type = "sim",
  method = "eigen",
  Durbin = NULL,
  zero.policy = NULL,
  interval = NULL,
  trs = NULL,
  cor = "none",
  dynamic = FALSE,
  demean = FALSE,
  twoways = FALSE,
  control = list()
)
}
\arguments{
\item{formula}{A formula similar to GAM specification including
parametric and non-parametric terms. Parametric covariates
are included in the usual way and non-parametric p-spline smooth terms are
specified using \code{pspl(.)} and \code{pspt(.)} for the non-parametric 
covariates and spatial   or spatio-temporal trend, respectively.
More details in \emph{Details} and \emph{Examples}.}

\item{data}{A data frame containing the parametric and non-parametric
covariates included in the model. Also, if a \code{pspt(.)} term is 
included in formula, the data frame must include the spatial and temporal
coordinates specified in \code{pspt(.)}. In this case coordinates
must be ordered choosing time as fast index and spatial coordinates
as low indexes. See \code{head(unemp_it)} as an example.}

\item{na.action}{A function (default \code{options("na.action")}),
can also be \code{na.omit} or \code{na.exclude} with consequences 
 for residuals and fitted values. It may be necessary to set 
 \code{zero.policy} to \code{TRUE} because this subsetting may 
 create no-neighbour observations.}

\item{listw}{Default = \code{NULL} This will create a model with no spatial dependency.
To include spatial dependency, listw should be a spatial neighbours list object 
created for example by \code{\link[spdep]{nb2listw}} from \pkg{spdep}
package; if \code{\link[spdep]{nb2listw}} not given, set to 
the same spatial weights as the \code{listw} argument. It can
also be a spatial weighting matrix of order \emph{(NxN)} instead of
a \code{listw} neighbours list object.}

\item{type}{Type of spatial model specification: Default = "sim" this creates
a model with no type of spatial dependency. Types of models available:
sar", "sem", "sdm", "sdem", "sarar", or "slx". When creating a "slx", "sdem"
or "sdm" model it is necessary to include the formula of the durbin part in 
the \code{Durbin} parameter. There are examples on how to create these models.}

\item{method}{Similar to the corresponding parameter of 
\code{\link[spatialreg]{lagsarlm}} function in \pkg{spatialreg} package. 
"eigen" (default) - the Jacobian is computed as the product of 
(1 - rho*eigenvalue) using \code{\link[spatialreg]{eigenw}} from package
spatialreg. For big samples (> 500) method = "eigen" is not recommended.
Use "spam" or "Matrix_J" for strictly symmetric weights lists of 
styles "B" and "C", or made symmetric by similarity 
(Ord, 1975, Appendix C) if possible for styles "W" and "S", 
using code from the spam or Matrix packages to calculate the 
determinant; "Matrix" and "spam_update" provide updating Cholesky 
decomposition methods; "LU" provides an alternative sparse matrix 
decomposition approach. In addition, there are "Chebyshev" and 
Monte Carlo "MC" approximate log-determinant methods; 
the Smirnov/Anselin (2009) trace approximation is available 
as "moments". Three methods: "SE_classic", "SE_whichMin", 
and "SE_interp" are provided experimentally, the first to 
attempt to emulate the behaviour of Spatial Econometrics 
toolbox ML fitting functions. All use grids of log determinant 
values, and the latter two attempt to ameliorate some features 
of "SE_classic".}

\item{Durbin}{Default = \code{NULL}. If model is of type = "sdm", "sdem" or "slx" 
Parameter Durbin is a formula of a subset of explanatory variables to lag on
this part of the model.}

\item{zero.policy}{Similar to the corresponding parameter of 
\code{\link[spatialreg]{lagsarlm}} function in \pkg{spatialreg} package. 
If \code{TRUE} assign zero to the lagged value of zones without 
neighbours, if \code{FALSE} assign \code{NA} - causing 
\code{pspat()} to terminate with an error. Default = \code{NULL}.}

\item{interval}{Search interval for autoregressive parameter.
Default = \code{NULL}.}

\item{trs}{Similar to the corresponding parameter of 
\code{\link[spatialreg]{lagsarlm}} function in \pkg{spatialreg} package.
Default \code{NULL}, if given, a vector of powered spatial weights 
matrix traces output by \code{\link[spdep]{trW}}.}

\item{cor}{Type of temporal correlation for temporal data. Possible values 
are "none" (default) or "ar1".}

\item{control}{List of extra control arguments - see section below}
}
\value{
A list object of class \emph{pspat}
\tabular{ll}{
 \code{call} \tab Matched call. \cr
 \code{terms} \tab The terms object used. \cr
 \code{contrasts} \tab (only where relevant) the contrasts used
             for parametric covariates. \cr
 \code{xlevels} \tab (only where relevant) a record of the levels
             of the parametric factors used in fitting. \cr
 \code{edftot} \tab Equivalent degrees of freedom for the whole model. \cr
 \code{edfspt} \tab Equivalent degrees of freedom for smooth
             spatio-temporal or spatial trend. \cr
 \code{edfnopar} \tab Equivalent degrees of freedom for
             non-parametric covariates. \cr
 \code{psanova} \tab \emph{TRUE} if spatio-temporal or spatial trend is 
   PS-ANOVA. \cr
 \code{bfixed} \tab Estimated betas corresponding to fixed effects in
             mixed model. These betas comes from either parametric
             covariates or fixed coefficients of smooth terms
             reparameterized as mixed models. \cr
 \code{se_bfixed} \tab Standard errors of fixed betas. \cr
 \code{brandom} \tab Estimated betas corresponding to random effects
             in mixed model. These betas comes from random coefficients of 
             smooth terms reparameterized as mixed models. \cr
 \code{se_brandom}\tab Standard errors of random betas. \cr
 \code{vcov_b} \tab Covariance matrix of fixed and random
             effects. \cr
 \code{sar} \tab \emph{TRUE} if model is PS-SAR. \cr
 \code{rho} \tab Estimated rho. If \code{sar=FALSE} always \eqn{rho=0}. \cr 
 \code{se_rho} \tab Standard error of \eqn{rho}. \cr
 \code{ar1} \tab \emph{TRUE} if model has a temporal autoregressive of
             first order in residuals. \cr
 \code{phi} \tab Estimated phi. If \code{ar1=FALSE} always \eqn{phi=0}. \cr
 \code{delta} \tab Estimated delta for spatial error models, if model does not include
 spatial error term, always \eqn{delta=0}. \cr
 \code{se_rho} \tab Standard error of \eqn{phi}. \cr
 \code{fitted.values} \tab Vector of fitted values of the dependent
             variable. \cr
 \code{se_fitted.values} \tab Vector of standard errors of
      \code{fitted.values}. \cr
 \code{fitted.values_Ay} \tab Vector of fitted values of the spatial lag of
     dependent variable: \eqn{(\rho*W_N \otimes I_T) y}. \cr
 \code{se_fitted.values_Ay} \tab Vector of standard errors of
      \code{fitted.values_Ay}. \cr
 \code{residuals} \tab Vector of residuals. \cr
 \code{residuals_norm} \tab Uncorrelated residuals. For non-temporal
             data they are the same than \code{residuals}. \cr
 \code{df.residual} \tab Equivalent degrees of freedom for \code{residuals}. 
   \cr
 \code{sig2}  \tab Residual variance computed as SSR/df.residual. \cr
 \code{llik} \tab Log-likelihood value. \cr
 \code{llik_reml} \tab Restricted log-likelihood value. \cr
 \code{aic} \tab Akaike information criterion. \cr
 \code{bic} \tab Bayesian information criterion. \cr
 \code{sp1} \tab First spatial coordinate. \cr
 \code{sp2} \tab Second spatial coordinate. \cr
 \code{time} \tab Time coordinate. \cr
 \code{y} \tab Dependent variable. \cr
 \code{X} \tab Model matrix for fixed effects. \cr
 \code{Z} \tab Model matrix for random effects. \cr
}
}
\description{
Estimate geoadditive spatial or spatio-temporal 
  semiparametric PS-SAR, PS-SEM, PS-SARAR, PS-SLX or PS-DURBIN regression 
  models including parametric and non-parametric 
  covariates, spatial or spatio-temporal non-parametric
  trends and spatial lags of the dependent variable and/or 
  the noise of the model. 
  The non-parametric terms (either trends or covariates) 
  are modeled using P-Splines. 
  The non-parametric trend can be decomposed in an ANOVA way 
  including main and interactions effects of 2nd and 3rd order. 
  The estimation method is Restricted Maximum Likelihood (REML).
}
\details{
Function to estimate the model:
  \deqn{ y = (\rho*W_{N} \otimes I_T) y + X \beta +
    f(s_1,s_2,\tau_{t}) + \sum_{i=1}^k g(z_i) + \epsilon }
  where:
  \itemize{
    \item \eqn{f(s_1,s_2,\tau_t)} is a smooth spatio-temporal trend
    of the spatial coordinates \eqn{s1,s_2} and of the temporal
    coordinates \eqn{\tau_t}.
    \item \eqn{X} is a matrix including values of parametric covariates.
    \item \eqn{g(z_i)} are non-parametric smooth functions of the
    covariates \eqn{z_i}.
    \item \eqn{W_N} is the spatial weights matrix.
    \item \eqn{\rho} is the spatial spillover parameter.
    \item \eqn{I_T} is an identity matrix of order \eqn{T} (\emph{T=1}
      for pure spatial data).
    \item \eqn{\epsilon ~ N(0,R)} where \eqn{ R = \sigma^2 I_T} if errors
      are uncorrelated or it follows an AR(1) temporal autoregressive 
      structure for serially correlated errors.
  }

\describe{
  \item{Including Non-Parametric terms}{
  The non-parametric terms are included in \code{formula} using
  \code{pspt(.)} for spatial or spatio-temporal trends and 
  \code{pspl(.)} for other non-parametric smooth additive terms.

  For example, if a model includes a spatio-temporal trend with 
  \emph{long}, and \emph{lat} as spatial coordinates and \emph{year} 
  as temporal coordinate; two  non-parametric covariates (\emph{empgrowth} 
  and \emph{serv}) and three parametric covariates (\emph{partrate}, 
  \emph{agri} and \emph{cons}), the formula (choosing default values
  for each term) should be written as: \cr

    \code{ unrate ~ partrate + agri + cons +
                   pspl(serv) + pspl(empgrowth) +
                   pspt(long,lat,year) } \cr

  For spatial trend case the term \code{pspt(.)} does not include a 
  temporal coordinate, that is, in the previous example would be 
  specified as \code{pspt(long,lat)}.
  }
  
  \item{How to use pspl() and pspt()}{   
  Note that both in pspl(.) and pspt(.) we have to include \code{nknots} 
  which is the dimension of the basis used to represent the smooth term.
  nknots should not be less than the dimension of the null space of the penalty
  for the term see \code{\link[mgcv:null.space.dimension]{null.space.dimension}} from 
  package mgcv and see \code{\link[mgcv:choose.k]{choose.k}} to know how to choose nknots
  also from package mgcv.
  
  In pspl(.), the default nknots = 10 see \code{\link{pspl}}. In this term we can only
  include single variables, so if we want more than one non-parametric variable
  we will use pspl(.) more than once, each one with the desired number of nknots.
  
  pspt(.) is used for spatial smoothing or spatio-temporal smoothing. The default
  is time = NULL see \code{\link{pspt}} and default nknots = c(10,10,5). If only 
  include spatial smoothing, nknots will be a length 2 vector indicating the base 
  for each spatial variable (long, lat). If spatio-temporal smoothing, it will be 
  a length 3 vector.
  }
  
  \item{ANOVA descomposition}{

  In many situations the  spatio-temporal trend given by 
  \eqn{f(s_1,s_2,\tau_t)} can be very complex and the use of a 
  multidimensional smooth function may not be flexible enough to 
  capture the structure in the data. Furthermore, the estimation of 
  this trend can become computationally intensive especially for 
  large databases.\cr
  To solve this problem, Lee and Durbán (2011) proposed an ANOVA-type
  decomposition of this spatio-temporal trend where spatial and 
  temporal main effects, and second- and third-order interaction 
  effects can be identified as:
  
  \deqn{ f(s_1, s_2, \tau_t) = f_1(s_1) + f_2(s_2) + f_t(\tau_t) +
         f_{1,2}(s_1, s_2) +  f_{1,t}(s_1, \tau_t) +
         f_{2,t}(s_2, \tau_t) + f_{1,2,t}(s_1, s_2, \tau_t) }
  
  In this equation \eqn{f_1(s_1), f_2(s_2)} and \eqn{f_t(\tau_t)} 
  are the main effects, \eqn{f_{1,2}(s_1,s_2), f_{1,t}(s_1,\tau_t)} 
  and \eqn{f_{2,t}(s_2,\tau_t)} are the second-order interaction 
  effects and \eqn{f_{1,2,t}(s_1,s_2,\tau_t)} is the third-order 
  interaction effect. In this case, each effect can have its own 
  degree of smoothing allowing a greater flexibility for the 
  spatio-temporal trend. The ANOVA decomposition of the trend
  can be set as an argument in \code{pspt(.)} terms choosing
  \code{psanova = TRUE}.
  
  For example to choose an ANOVA decomposition in previous case 
  we can set \code{pspt(long, lat, year, nknots = c(18,18,8),
  psanova = TRUE)}. Calculating up to third-order interactions
  can be very computationally expensive. To deal with this there 
  is the possibility to select subgroups of interaction effects for
  the second- and third-order effects. To do this there are three
  parameters available inside \code{pspt()} to define the subgroups.
  These are \code{nest_sp1}, \code{nest_sp2}, \code{nest_time}. These
  are vector parameters in which to include numbers to divide the values
  inside the \code{nknots} parameter. For example, if we set nest_sp1 =
  c(1,2,2) we will have all nots for s_1 effect, 18/2 for each second-order
  effects with s_1, and 8/2 nots for the third order effect with s_1. It
  is important that the numbers must be divisors of the values in nknots.
  See \emph{Examples} for more details.
  
  Also, if we want to set any main effect to 0 we can do this setting 
  the parameters \code{f1_main}, \code{f2_main} or \code{ft_main} to FALSE,
  The Default is TRUE.
  As with the main effects, we can do the same with second- and third-order
  effects with parameters \code{f12_int}, \code{f1t_int}, \code{f2t_int}, 
  \code{f12t_int}.
  } }

  In most empirical cases main effects are more flexible than 
  interaction effects and therefore, the number of knots in B-Spline 
  bases for interaction effects do not need to be as big as the 
  number of knots for main effects. \cr
  \emph{Lee et al.}, (2013) proposed a nested basis procedure
  in which the number of knots for the interaction effects are 
  reduced using \emph{divisors} such that the space spanned by 
  B-spline bases used for interaction effects are a subset of the 
  space spanned by B-spline bases used for main effects. 
  The \emph{divisors} can be specified as an argument in 
  \code{pspt(.)} terms. See \emph{Examples} for details.

  All the terms are jointly fitted using Separation of Anisotropic 
  Penalties (SAP) algorithm (see \emph{Rodríguez-Álvarez et al., (2015)}) 
  which allows to the mixed model reparameterization of the model. 
  When \emph{sar} or \emph{ar1} arguments are set equal to \emph{TRUE},
  \eqn{\rho} and \eqn{\phi} parameters are numerically estimated using 
  function \code{\link[nloptr]{nloptr}} implemented in pakage \pkg{nloptr}.
  In these cases, an iterative process between SAP and numerical 
  optimization of \eqn{\rho} and \eqn{\phi} is applied until
  convergence. See details in \emph{Mínguez et al.}, (2018).
  
  \describe{
  
  \item{Plotting non-parametric effects}{
  There are two ways of plotting non-parametric effects
  \itemize{
  \item{fit_terms() + plot_terms()} \code{fit_terms()} estimates F(x) with the
  variables that you introduce. This way you can estimate the effects of all or just some 
  non-parametric variables. \code{plot_terms()} plots F(X)
  \deqn{list_varnopar <- c("VAR1", "VAR2")}
  \deqn{terms_nopar <- fit_terms(MODEL, list_varnopar)}
  \deqn{plot_terms(terms_nopar, DATA)}
  
  \item{impactsnopar() + plot_impactsnopar()} With this function 
  you do both things at once if the parameter \code{viewplot} = TRUE. This function
  will plot all non-parametric effects. If \code{viewplot} = FALSE, use plot_impactsnopar()
  \deqn{eff_nparvar <- impactsnopar(MODEL, listw = W, viewplot = TRUE)}
  \deqn{eff_nparvar <- impactsnopar(MODEL, listw = W, viewplot = FALSE)}
  \deqn{plot_impactsnopar(eff_nparvar, data = DATA)}
  
  The default plotting method includes a smoothing term, with \code{smooth} = FALSE
  the resulting plot will not be smoothed.
  }
  }
  
  \item{Obtaining parametric effects}{
  When calculating parametric effects, the resulting effects will be returned with a 
  summary.
  \code{impactspar()} Is the function to estimate the effects of parametric variables
  to output them use \code{summary}. This function will calculate the effects of all 
  parametric variables in the model.
  
  \deqn{eff_parvar <- impactspar(MODEL, listw = W)}
  \deqn{summary(eff_parvar)}
  }
  
  }
}
\section{Control arguments}{

\tabular{ll}{
  \code{vary_init} \tab Initial value of the noise variance in the model.
    Default = \code{NULL}.\cr
  \code{trace} \tab A logical value set to \emph{TRUE} to show 
    intermediate results during the estimation process. 
    Default = \emph{FALSE}. \cr
  \code{thr} \tab Numerical value for the threshold of convergence
    in the estimation process. Default 1e-3. \cr
  \code{maxit} \tab An integer value for the maximum number of 
    iterations until convergence. Default = 200. \cr
  \code{rho_init} \tab An initial value for \eqn{rho} parameter if
    \code{sar=TRUE}. Default 0. \cr
  \code{phi_init} \tab An initial value for \eqn{phi} parameter if
    \code{ar1=TRUE}. Default 0. \cr
  \code{rho_fixed} \tab A logical value to set fixed \eqn{rho}
         parameter during estimation process. Default \emph{FALSE}. \cr
  \code{phi_fixed} \tab A logical value to set fixed \eqn{phi}
         parameter during estimation process. Default \emph{FALSE}. \cr
}
}

\examples{
################################################
###################### Examples using a panel data of rate of
###################### unemployment for 103 Italian provinces in 1996-2014.

##########################
### GAM model with library pspatreg vs library mgcv
library(pspatreg)
data(unemp_it)
unemp_it_short <- unemp_it[unemp_it$year >= 2014,]
lwsp_it <- spdep::mat2listw(Wsp_it, row.names = rownames(Wsp_it))

######################  GAM pure with pspatreg
form1 <- unrate ~ partrate + agri + cons +
                 pspl(serv, nknots = 15) +
                 pspl(empgrowth, nknots = 20)
gampure <- pspatfit(form1, data = unemp_it_short)
summary(gampure)

######################  GAM with mgcv
library(mgcv)
form1_mgcv <- unrate ~ partrate + agri + cons +
                       s(serv, bs = "ps", m = 2, k = 15) +
                       s(empgrowth, bs = "ps", m = 2, k = 20)
gampure_mgcv <- gam(form1_mgcv, data = unemp_it_short, method = "REML")
summary(gampure_mgcv)
vis.gam(gampure_mgcv, view = c("serv", "empgrowth") , theta = -45)
######################  Get Non-parametric terms of GAM with pspatreg
list_varnopar <- c("serv", "empgrowth")
terms_nopar <- fit_terms(gampure, list_varnopar)
######################  Plot non-parametric terms
plot_terms(terms_nopar, unemp_it_short)


#####################  GAM + SAR Model
### Same as gampure but we include neighbours matrix and type = "sar"
### Control argument trace = TRUE to show intermediate results during 
### the estimation process
gamsar <- pspatfit(form1, data = unemp_it_short, 
               type = "sar", listw = Wsp_it, 
               control = list(trace = TRUE))
summary(gamsar)
### Compare gamsar with gam model
anova(gampure, gamsar)

###################### Non-Parametric Total, Direct and Indirect impacts
### with impactsnopar(viewplot = TRUE)
eff_nparvar <- impactsnopar(gamsar, listw = Wsp_it, viewplot = TRUE)

###################### Non-Parametric Total, Direct and Indirect impacts
### with impactsnopar(viewplot = FALSE) and using plot_impactsnopar()
eff_nparvar <- impactsnopar(gamsar, listw = Wsp_it, viewplot = FALSE)
plot_impactsnopar(eff_nparvar, data = unemp_it_short, smooth = TRUE)

###################### Parametric Total, Direct and Indirect impacts
eff_parvar <- impactspar(gamsar, listw = Wsp_it)
summary(eff_parvar)


###############################################
### Spatial semiparametric model without spatial lag
### Add pspt(long, lat) to include non_parametric spatial variables
### psanova = FALSE to not decompose the effects
form2 <- unrate ~ partrate + agri + cons +
                pspl(serv, nknots = 15) + 
                pspl(empgrowth, nknots = 20) +
                pspt(long, lat, nknots = c(20,20), 
                     psanova = FALSE)
geosp1_sar <- pspatfit(form2, 
                       data = unemp_it_short) 
summary(geosp1_sar)


###############################################
### Spatial semiparametric model with spatial lag
### Type = "sar" for spatial lag
### method = "Chebyshev" to show it also works. method = "eigen" will work
### but not recommended for large samples
### SAR
geospsar <- pspatfit(form2, data = unemp_it_short, 
                 listw = Wsp_it, 
                 method = "Chebyshev", 
                 type = "sar", 
                 control = list(trace = TRUE))
 
### SEM
geospsem <- pspatfit(form2, data = unemp_it_short, 
                 listw = Wsp_it, 
                 method = "Chebyshev", 
                 type = "sem", 
                 control = list(trace = TRUE))

### SARAR
geospsarar <- pspatfit(form2, data = unemp_it_short, 
                 listw = Wsp_it, 
                 method = "Chebyshev", 
                 type = "sarar", 
                 control = list(trace = TRUE))
                 
                 
summary(geospsar)
summary(geospsem)
summary(geospsarar)


#####################################
#### Fitted Values and Residuals
plot(geospsar$fitted.values, unemp_it_short$unrate, 
     xlab = 'fitted values', ylab = "unrate",
     type = "p", cex.lab = 1.3, cex.main = 1.3,
     main = "Spatial semiparametric model with spatial lag",
     sub = "Spatial trend fixed for period 2014")
     
plot(geospsar$fitted.values, geospsar$residuals, 
     xlab = 'fitted values', ylab = "residuals",
     type = "p", cex.lab = 1.3, cex.main=1.3,
     main = "Spatial semiparametric model with spatial lag",
     sub = "Spatial trend fixed for period 2014")

             
 
###### Non-Parametric Total, Direct and Indirect impacts for spatial sar. First with smooth, second without
eff_nparvar_smooth <- impactsnopar(geospsar, listw = lwsp_it, viewplot = TRUE, smooth = TRUE)
eff_nparvar_no_smooth <- impactsnopar(geospsar, listw = lwsp_it, viewplot = TRUE, smooth = FALSE)


###### Parametric Total, Direct and Indirect impacts
list_varpar <- c("partrate","agri","cons")
eff_parvar <- impactspar(geospsar, listw = lwsp_it)
summary(eff_parvar)


############################################
### Spatial Durbin Model with GAM
### Apart from defining type = "sdm" we have to include a
### formula in parameter Durbin for the Durbin part

### lwsp_it is a list of neighbours as used un spdep and spatialreg packages
### In this package you can either input a neighbours matrix or list
### We do thi to show that both work

Wsp_it <- as.matrix(Wsp_it)
lwsp_it <- spdep::mat2listw(Wsp_it, row.names = rownames(Wsp_it))

formgam <- unrate ~ partrate + agri + cons +
pspl(serv, nknots = 15) + 
pspl(empgrowth, nknots = 20)

durbinform <- ~ partrate + agri + pspl(serv, nknots = 13) 

gamsdm <- pspatfit(formgam, 
data = unemp_it_short,
listw = lwsp_it, 
method = "eigen",
type = "sdm",
Durbin = durbinform)

summary(gamsdm)


############################################
### Spatial Durbin Error Model with GAM

formgam <- unrate ~ partrate + agri + cons +
pspl(serv, nknots = 15) + 
pspl(empgrowth, nknots = 20)

durbinform <- ~ partrate + agri + pspl(serv, nknots = 13) 

gamsdem <- pspatfit(formgam, 
data = unemp_it_short,
listw = lwsp_it, 
method = "eigen",
type = "sdem",
Durbin = durbinform)

summary(gamsdem)

########################################
### SLX model with GAM
### The same as the sdem model but type = "slx"

gamslx <- pspatfit(formgam, 
data = unemp_it_short,
listw = lwsp_it, 
method = "eigen",
type = "slx",
Durbin = durbinform)

summary(gamslx)


###############################################
### Spatial semiparametric ANOVA model without spatial lag
### Parameters nest_sp1 and nest_sp2 indicate the following:
### the first value of the vector is the divisor of the first value of
### nknots un pspt(). Gives the nknots for the first-order interaction.
### The second value is the divisor for the second value in nknots giving
### the the nknots per each second-order interaction. They have to be divisible
### Interaction term f12 with nested basis
form3 <- unrate ~ partrate + agri + cons +
                  pspl(serv, nknots = 15) + 
                  pspl(empgrowth, nknots = 20) +
                  pspt(long, lat, nknots = c(20,20), 
                       psanova = TRUE,
                       nest_sp1 = c(1, 2), 
                       nest_sp2 = c(1, 2))
                       
##### Spatial trend fixed for period 1996-2014.
##### in plot_sp2d(), if data is not an .sf object, you must indicate the spatial coordinates variables
geospanova <- pspatfit(form3, data = unemp_it_short, control = list(trace = TRUE))
summary(geospanova)
### Plot spatial trend and interaction (ANOVA)

plot_sp2d(geospanova, data = unemp_it_short, addmain = TRUE, 
addint = TRUE, coordinates = unemp_it_short[, c("long", "lat")])

################################
### Spatial semiparametric ANOVA model with spatial lag
### Same as the previous but include type = "sar" and parameter litsw
### Interaction term f12 with nested basis
geospanova_sar <- pspatfit(form3, data = unemp_it_short, 
                       listw = Wsp_it, type = "sar")
summary(geospanova_sar)


 ###############################################
 ### Spatio-temporal semiparametric ANOVA model without spatial lag
 ### Interaction terms f12,f1t,f2t and f12t with nested basis
 ### Remark: nest_sp1, nest_sp2 and nest_time must be divisors of nknots
 form4 <- unrate ~ partrate + agri + cons +
                   pspl(serv, nknots = 15) + pspl(empgrowth, nknots = 20) +
                   pspt(long, lat, year, nknots = c(18,18,12),
                   psanova = TRUE, nest_sp1 = c(1,2,3), nest_sp2 = c(1,2,3),
                   nest_time = c(1,2,2))
 sptanova <- pspatfit(form4, data = unemp_it,
                  control = list(tol = 1e-2, maxit = 200, trace = TRUE))
 summary(sptanova)
 
 ####### Plot just spatial trend, 2d, (ANOVA)
 plot_sp2d(sptanova, data = unemp_it, addmain = TRUE, 
 addint = TRUE, coordinates = unemp_it[, c("long", "lat")])

 ####### Plot spatio-temporal trend, 3d, (ANOVA)
# To use plot_sp3d() we have to give and .sf object.
# first, we create an .sf object

library(tidymodels)
library(tune)
library(spdep)
library(ggplot2)
library(dplyr)
library(pspatreg)
library(tripack)
library(rgeos)
library(dbscan)

######## preparing the data
unemp_it_sf <- sf::st_as_sf(unemp_it, coords = c("long", "lat"))

plot_sp3d(sptanova, data = unemp_it_sf, 
time_var = "year", 
time_index = c(1996, 2005, 2019),
addmain = TRUE, addint = FALSE)


 ### Spatio-temporal semiparametric ANOVA model with spatial lag
 sptanova_sar <- pspatfit(form4, data = unemp_it, listw = Wsp_it, type = "sar",
                      control = list(thr = 1e-1, maxit = 100, trace = FALSE))
 summary(sptanova_sar)
 
 
 #########################################
 ### Spatio-temporal semiparametric ANOVA model with spatial lag
 ### and temporal autorregresive noise
 sptanova_sar_ar1 <- pspatfit(form4, data = unemp_it, listw = Wsp_it, type = "sar",
                          ar1 = TRUE, control = list(thr = 1e-1, 
                                                 maxit = 200, trace = FALSE))
 summary(sptanova_sar_ar1)
 ###### Non-Parametric Total, Direct and Indirect Effects
 list_varnopar <- c("serv", "empgrowth")
 eff_nparvar <- impactsnopar(sptanova_sar_ar1, listw = Wsp_it, viewplot = TRUE)
 ###### Parametric Total, Direct and Indirect Effects
 list_varpar <- c("partrate","agri","cons")
 eff_parvar <- impactspar(sptanova_sar_ar1, listw = lwp_it)
 summary(eff_parvar)
 
 
 ###############################################
 ### Spatio-temporal semiparametric ANOVA model without spatial lag
 ### Now we repeat previous spatio-temporal model but restricting some interactions
 ### Interaction terms f12,f1t and f12t with nested basis
 ### Interaction term f2t restricted to 0
  form5 <- unrate ~ partrate + agri + cons +
                  pspl(serv, nknots=15) + pspl(empgrowth, nknots=20) +
                  pspt(long, lat, year, nknots = c(18,18,6), psanova = TRUE,
                  nest_sp1 = c(1,2,3), nest_sp2 = c(1,2,3),
                  nest_time = c(1,2,2), f2t_int = FALSE)
 sptanova2 <- pspatfit(form5, data = unemp_it_short,
                  control = list(thr=1e-2, maxit = 200, trace = TRUE))
 summary(sptanova2)
 
######################  parametric formula (demean)
formpar <- unrate ~ partrate + agri + cons
param <- pspatfit(formpar, data = unemp_it, listw = lwsp_it)
param_dem <- pspatfit(formpar, data = unemp_it, listw = lwsp_it,
                      demean = TRUE, twoways = FALSE)

}
\references{
\itemize{ 
  \item Basile, R., Durbán, M., Mínguez, R., Montero, J. M., and 
    Mur, J. (2014). Modeling regional economic dynamics: Spatial
    dependence, spatial heterogeneity and nonlinearities. 
    \emph{Journal of Economic Dynamics and Control}, (48), 229-245.

  \item Eilers, P. and Marx, B. (1996). Flexible Smoothing with 
    B-Splines and Penalties. \emph{Statistical Science}, (11), 89-121.

  \item Lee, D. and Durbán, M. (2011). P-Spline ANOVA Type Interaction 
    Models for Spatio-Temporal Smoothing. \emph{Statistical Modelling}, 
    (11), 49-69.

  \item Lee, D. J., Durban, M., and Eilers, P. (2013). Efficient
    two-dimensional smoothing with P-spline ANOVA mixed models 
    and nested bases. \emph{Computational Statistics & Data Analysis}, 
    (61), 22-37.

  \item LeSage, J. and Pace, K. (2009). \emph{Introduction to 
    Spatial Econometrics}. CRC Press, Boca Raton.

  \item Mínguez, R.; Basile, R. and Durbán, M. (2018). An Alternative 
    Semiparametric Model for Spatial Panel Data. Under evaluation in 
    \emph{Statistical Methods and Applications}.

  \item Montero, J., Mínguez, R., and Durbán, M. (2012). SAR models 
    with nonparametric spatial trends: A P-Spline approach. 
    \emph{Estadística Espanola}, (54:177), 89-111.

  \item Rodríguez-Alvarez, M. X.; Kneib, T.; Durban, M.; Lee, D.J.
    and Eilers, P. (2015). Fast smoothing parameter separation 
    in multidimensional generalized P-splines: the SAP algorithm.
    \emph{Statistics and Computing} 25 (5), 941-957.
}
}
\seealso{
\itemize{
  \item \code{\link{impactspar}} compute total, direct and indirect effect
                               functions for parametric continuous 
                               covariates.
  \item \code{\link{impactsnopar}} compute total, direct and indirect effect
                                functions for non-parametric continuous 
                                covariates.
  \item \code{\link{fit_terms}} compute smooth functions for non-parametric
                                continuous covariates.
   \item\code{\link[mgcv]{gam}} well-known alternative of estimation
                                of semiparametric models in \pkg{mgcv} 
                                package.
}
}
\author{
Roman Minguez \email{roman.minguez@uclm.es}
}
